# This is a basic workflow to help you get started with Actions

name: CI/CD Docker

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
env:
  DOCKER_IMAGE: ghcr.io/yanlecun/dockerfile_ubuntu # 예를 들면, ghcr.io/dolphago/github-follow-unfollow
  VERSION: ${{ github.sha }}
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }} # runner 설정에서 읽어들일거에요.
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.UBUNTU_TOKEN }}
          
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          buildkitd-flags: --debug


  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-development ]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.UBUNTU_TOKEN }}
      - name: Docker run
        run: |
          docker ps -q --filter "name={woosong1}" | grep -q . && docker stop {woosong1} && docker rm -fv {woosong1}
          docker run -d -p 3000:80 --name cicd1 --restart always ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
